{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharun\\\\OneDrive\\\\Desktop\\\\AcademiX\\\\Calculator\\\\calculator-app\\\\src\\\\operation.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n      backgroundColor: '#424242' // Change menu background to dark gray for contrast\n    }\n  }\n};\nconst operations = ['Addition', 'Subtraction', 'Division', 'Multiplication'];\nfunction getStyles(operation, selectedOperation, theme) {\n  return {\n    fontWeight: selectedOperation.includes(operation) ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular,\n    color: 'white' // Set menu item text color to white\n  };\n}\nexport default function SelectOperation() {\n  _s();\n  const theme = useTheme();\n  const [selectedOperation, setSelectedOperation] = React.useState([]);\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectedOperation(typeof value === 'string' ? value.split(',') : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 470\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-select-operation-label\",\n        sx: {\n          color: 'white'\n        } // Set label color to white\n        ,\n        children: \"Select Operation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-select-operation-label\",\n        id: \"demo-select-operation\",\n        multiple: true,\n        value: selectedOperation,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Select Operation\",\n          sx: {\n            color: 'white',\n            borderColor: 'white'\n          } // Set input text color to white\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this),\n        MenuProps: MenuProps,\n        sx: {\n          color: 'white',\n          // Set selected text color to white\n          '.MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white'\n          },\n          '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white'\n          },\n          '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white'\n          }\n        },\n        children: operations.map(operation => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: operation,\n          style: getStyles(operation, selectedOperation, theme),\n          children: operation\n        }, operation, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectOperation, \"XOPHSF1Nf8UMsnFEAkH9khBjFDc=\", false, function () {\n  return [useTheme];\n});\n_c = SelectOperation;\nvar _c;\n$RefreshReg$(_c, \"SelectOperation\");","map":{"version":3,"names":["React","useTheme","OutlinedInput","InputLabel","MenuItem","FormControl","Select","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","backgroundColor","operations","getStyles","operation","selectedOperation","theme","fontWeight","includes","typography","fontWeightMedium","fontWeightRegular","color","SelectOperation","_s","setSelectedOperation","useState","handleChange","event","target","value","split","children","sx","m","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","multiple","onChange","input","label","borderColor","map","_c","$RefreshReg$"],"sources":["C:/Users/Tharun/OneDrive/Desktop/AcademiX/Calculator/calculator-app/src/operation.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n      backgroundColor: '#424242', // Change menu background to dark gray for contrast\r\n    },\r\n  },\r\n};\r\n\r\nconst operations = [\r\n  'Addition',\r\n  'Subtraction',\r\n  'Division',\r\n  'Multiplication',\r\n];\r\n\r\nfunction getStyles(operation, selectedOperation, theme) {\r\n  return {\r\n    fontWeight: selectedOperation.includes(operation)\r\n      ? theme.typography.fontWeightMedium\r\n      : theme.typography.fontWeightRegular,\r\n    color: 'white', // Set menu item text color to white\r\n  };\r\n}\r\n\r\nexport default function SelectOperation() {\r\n  const theme = useTheme();\r\n  const [selectedOperation, setSelectedOperation] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSelectedOperation(\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ m: 1, width: 470 }}>\r\n        <InputLabel\r\n          id=\"demo-select-operation-label\"\r\n          sx={{ color: 'white' }} // Set label color to white\r\n        >\r\n          Select Operation\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-select-operation-label\"\r\n          id=\"demo-select-operation\"\r\n          multiple\r\n          value={selectedOperation}\r\n          onChange={handleChange}\r\n          input={\r\n            <OutlinedInput\r\n              label=\"Select Operation\"\r\n              sx={{ color: 'white', borderColor: 'white' }} // Set input text color to white\r\n            />\r\n          }\r\n          MenuProps={MenuProps}\r\n          sx={{\r\n            color: 'white', // Set selected text color to white\r\n            '.MuiOutlinedInput-notchedOutline': {\r\n              borderColor: 'white',\r\n            },\r\n            '&:hover .MuiOutlinedInput-notchedOutline': {\r\n              borderColor: 'white',\r\n            },\r\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n              borderColor: 'white',\r\n            },\r\n          }}\r\n        >\r\n          {operations.map((operation) => (\r\n            <MenuItem\r\n              key={operation}\r\n              value={operation}\r\n              style={getStyles(operation, selectedOperation, theme)}\r\n            >\r\n              {operation}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}